% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generator-architectures.R
\name{Generator}
\alias{Generator}
\title{Generator}
\usage{
Generator(
  noise_dim,
  data_dim,
  hidden_units = list(128, 128),
  dropout_rate = 0.5
)
}
\arguments{
\item{noise_dim}{a}

\item{data_dim}{b}

\item{hidden_units}{list of number of neurons per layer the length of the list determines the number of hidden layers}

\item{dropout_rate}{dropout for each hidden layer}
}
\value{
A neural net class for the Generator
}
\description{
Provides a class to transform data for RGAN.
Method \verb{$new()} initializes a new transformer, method \verb{$fit(data)} learns
the parameters for the transformation from data (e.g. means and sds).
Methods \verb{$transform()} and \verb{$inverse_transform()} can be used to transform
and back transform a data set based on the learned parameters.
Currently, DataTransformer supports z-transformation (a.k.a. normalization)
for numerical features/variables and one hot encoding for categorical
features/variables. In your call to fit you just need to indicate which
columns contain discrete features.
}
